# –¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç: ConvertBot v1.0
# –°—Å—ã–ª–∫–∞: https://t.me/ConvertRusBot

import telebot
from config import *
from extensions import APIException, CryptoConverter


bot = telebot.TeleBot(TOKEN)


@bot.message_handler(commands=['start', 'help', '—Å—Ç–∞—Ä—Ç', '–ø–æ–º–æ—â—å', '—Ö–µ–ª–ø'])
def helps(message: telebot.types.Message):
    text = '‚Ñπ –ü–æ–º–æ—â—å –ø–æ —Ä–∞–±–æ—Ç–µ —Å –±–æ—Ç–æ–º\n\n' \
           '‚¶Å –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ü–µ–Ω—É –≤–∞–ª—é—Ç—ã –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n' \
           '  <–∏–º—è_–≤–∞–ª—é—Ç—ã> <–≤ –∫–∞–∫—É—é –ø–µ—Ä–µ–≤–µ—Å—Ç–∏> <–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ>\n\n' \
           '  –ü—Ä–∏–º–µ—Ä:     –¥–æ–ª–ª–∞—Ä —Ä—É–±–ª—å 1\n\n' \
           '‚¶Å –£–∑–Ω–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç –ø–æ –∫–æ–º–∞–Ω–¥–µ: /values\n' \
           '‚¶Å –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –≤–≤–µ—Å—Ç–∏: "–≤–∞–ª—é—Ç—ã", "—Å–ø–∏—Å–æ–∫", "–ª–∏—Å—Ç".'
    bot.send_message(message.chat.id, text)


@bot.message_handler(commands=['values', '–≤–∞–ª—é—Ç—ã', '—Å–ø–∏—Å–æ–∫', '–ª–∏—Å—Ç'])
def list_currencies(message: telebot.types.Message):
    text = 'üè¶ –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–ª—é—Ç—ã:\n'
    for key in currency.keys():
        text = '\n - '.join((text,  key))
    bot.send_message(message.chat.id, text)


@bot.message_handler(content_types=['text', ])
def convert(message: telebot.types.Message):
    values = message.text.split()

    if values[0] in ['—Å—Ç–∞—Ä—Ç', '–ø–æ–º–æ—â—å', '—Ö–µ–ª–ø']:
        return helps(message)
    if values[0] in ['–≤–∞–ª—é—Ç—ã', '—Å–ø–∏—Å–æ–∫', '–ª–∏—Å—Ç']:
        return list_currencies(message)

    try:
        if len(values) > 3:
            raise APIException('–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.')
        if len(values) < 3:
            raise APIException('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.')
        base, quote, amount = values
        total_base = CryptoConverter.get_price(base, quote, amount)
    except APIException as e:
        bot.reply_to(message, f'‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ –∫–æ–º–∞–Ω–¥—ã:\n- {e}')
    except Exception as e:
        bot.reply_to(message, f'‚ö† –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ–º–∞–Ω–¥—É:\n{e}')
    else:
        at = amount.replace(',', '.')
        z1, z2 = currency[base][1], currency[quote][1]
        text = f'üè¶ {base} ‚ûî {quote}\nüí∞ {at} ‚âà ' \
               f'{round(float(total_base) * float(at), 2)} {z2}'
        bot.send_message(message.chat.id, text)


bot.polling(none_stop=True)
